<% if (Array.isArray(dt) && dt.length > 0) { %>
    <form>
        <p>   <%- include('bases') %></p>
        
       </form>

    <h2 class="mt-5"  style="text-align: center;">Data from upload files</h2>
    <button type="button" class="btn btn-success" id="saveButton" onclick="saveTable()">
        <i class="fas fa-save"></i> Save to Database
    </button>
    <div class="table-container">
        <table class="table"   >
            <thead bgcolor="#f0f0f0" style="font-weight: bold;">
                <tr>
                    <% Object.keys(dt[0]).forEach(function(key) { %>
                        <th scope="col" onclick="makeEditable(this)">
                            <div class="editable" style="display: block;"><%= key %></div>
                            <input type="text" class="editable" style="display: none;" value="<%= key %>">
                        </th>
                    <% }) %>
                </tr>
            </thead>
            <tbody>
                <% dt.forEach(function(row) { %>
                    <tr>
                        <% Object.values(row).forEach(function(value) { %>
                            <td><%= value %></td>
                        <% }) %>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
<% } %>

<script>
    function makeEditable(cell) {
        var div = cell.querySelector('.editable');
        var input = cell.querySelector('input');

        // Toggle visibility of div and input
        div.style.display = 'none';
        input.style.display = 'block';

        // Focus input and select its content
        input.focus();
        input.select();

        // When input loses focus, update the header
        input.addEventListener('blur', function() {
            updateHeader(cell, input.value);
        });
    }

    function updateHeader(cell, newValue) {
        var div = cell.querySelector('.editable');
        var input = cell.querySelector('input');

        // Update the text in the div and hide the input
        div.innerText = newValue;
        div.style.display = 'block';
        input.style.display = 'none';
    }

    function saveTable() {
    var headers = [];
    var data = [];

    // Get all table headers
    document.querySelectorAll('thead th').forEach(function(th) {
        var headerText = th.innerText.trim(); // Trim to remove leading/trailing whitespace
        if (headerText !== "") {
            headers.push(headerText);
        }
    });

    // Get all table rows
    var tableRows = document.querySelectorAll('tbody tr');
    var totalRows = tableRows.length;
    var processedRows = 0;

    tableRows.forEach(function(tr) {
        var rowData = {};
        tr.querySelectorAll('td').forEach(function(td, index) {
            if (headers[index]) {
                rowData[headers[index]] = td.innerText;
            }
        });
        data.push(rowData);
        processedRows++;

        // Check if all rows are processed
        if (processedRows === totalRows) {
            sendDataToServer(data);
        }
    });
}

function sendDataToServer(data) {
    // Send data to the server using AJAX
    $.ajax({
        url: '/saveToDatabase', // Replace with your server-side endpoint URL
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(data),
        success: function(response) {
      
            console.log("Data saved successfully:", response);
        },
        error: function(xhr, status, error) {
            // Handle error
            
            console.error("Error saving data:", error);
        }
    });
}
    
</script>
